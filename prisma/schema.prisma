generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  username    String
  email       String      @unique
  is_approved Boolean     @default(false)
  role        Role? @default(USER) 
  createdAt   DateTime    @default(now())
  password    String
  deletedAt   DateTime?
  Code_type   Code_type[]
  Voucher     Voucher[]
}

model Voucher {
  id              String     @id @default(uuid())
  date            DateTime   @default(now())
  voucherNo       Int        @unique
  payee           String
  voucherDetails  String
  accountCode     Type
  beneficiaryCode Type
  budgetCode      Type
  exchangeRate    Int
  amountFigures   Int
  amountWords     String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  status          Status     @default(DRAFT)
  userId          String
  Document        Document[]
  user_id         User       @relation(fields: [userId], references: [id])
}

model Document {
  id         String   @id @default(uuid())
  filepath   String
  filename   String
  filetype   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  voucherId  String
  voucher_id Voucher  @relation(fields: [voucherId], references: [id])
}

model Code_type {
  id          String @id @default(uuid())
  code        String
  description String
  type        Type
  userId      String
  user_id     User   @relation(fields: [userId], references: [id])
}

enum Role {
  INITIATOR
  REVIEWER
  APPROVER
  ADMIN
  USER
}

enum Status {
  DRAFT
  INITIATED
  PENDING
  IN_REVIEW
  APPROVED
  REJECTED
}

enum Type {
  ACCOUNT_CODE
  BENEFICIARY_CODE
  BUDGET_CODE
}
